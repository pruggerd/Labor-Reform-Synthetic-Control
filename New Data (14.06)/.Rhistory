predictors = c( "infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
dependent = "gdpc",
special.predictors = list(
list("schooling", c(2009,2010,2011,2012,2014,2015), "mean"),
list("socsp", seq(2003,2013,2), "mean")
),
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 21,
controls.identifier = c(1:20,22,23,24,25),
time.predictors.prior = c(2002:2015),
time.optimize.ssr = c(2002:2014),
time.plot = 2002:2016,
unit.names.variable = "Country"
)
#calculating synth command
synth_spain_all = synth(prep_spain_all)
#calculating tables
synth.table_spain_all = synth.tab(
dataprep.res = prep_spain_all,
synth.res = synth_spain_all)
print(synth.table_spain_all)
#performing plots
pathplot_spain_all = path.plot(dataprep.res = prep_spain_all, synth.res = synth_spain_all,
tr.intake = 2012, Xlab = c("Year"),
Ylab = "GDP per Capita Spain in Dollar, PPP")
gapsplot_spain_all = gaps.plot(dataprep.res = prep_spain_all,
synth.res = synth_spain_all, tr.intake = 2012,
Xlab = c("Year"), Ylab = "Harmonized Unemployment Rate Spain")
reformcountries = c("Portugal", "Greece", "Germany", "Hungary", "Ireland", "Italy")
reformcountries = c("Portugal", "Greece", "Germany", "Hungary", "Ireland", "Italy")
merge2$id = as.numeric(as.factor(merge2$Country))
#1. Spain Unemployment: SCM
prep_spain_all = dataprep(
foo = merge2,
predictors = c( "infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
dependent = "gdpc",
special.predictors = list(
list("schooling", c(2009,2010,2011,2012,2014,2015), "mean"),
list("socsp", seq(2003,2013,2), "mean")
),
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 15,
controls.identifier = c(1:14,16,17,18,19),
time.predictors.prior = c(2002:2015),
time.optimize.ssr = c(2002:2014),
time.plot = 2002:2016,
unit.names.variable = "Country"
)
#calculating synth command
synth_spain_all = synth(prep_spain_all)
#calculating tables
synth.table_spain_all = synth.tab(
dataprep.res = prep_spain_all,
synth.res = synth_spain_all)
print(synth.table_spain_all)
#performing plots
pathplot_spain_all = path.plot(dataprep.res = prep_spain_all, synth.res = synth_spain_all,
tr.intake = 2012, Xlab = c("Year"),
Ylab = "GDP per Capita Spain in Dollar, PPP")
gapsplot_spain_all = gaps.plot(dataprep.res = prep_spain_all,
synth.res = synth_spain_all, tr.intake = 2012,
Xlab = c("Year"), Ylab = "Harmonized Unemployment Rate Spain")
gapsplot__spain_gdp = gaps.plot(dataprep.res = prep_spain_gdp,
synth.res = synth_spain_gdp, tr.intake = 2012,
Xlab = c("Year"), Ylab = "GAP GDP per Capita in Dollar, PPP")
prep_spain_gdp = dataprep(
foo = merge_crisis,
predictors = c("infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
special.predictors = list(
list("socsp", seq(1995,2013, 4), "mean"),
list("schooling", c(2007,2008,2009,2010,2011,2012,2014,2015), c("mean"))
),
dependent = "gdpc",
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 7,
controls.identifier = c(1,2,3,5,6),
time.predictors.prior = c(2002:2012),
time.optimize.ssr = c(2002:2011),
unit.names.variable = "Country",
time.plot = 2002:2016
)
#defining new "CRISIS" dataset
#merge_na = merge1[is.na(merge1$minwage),]
crisiscountries = c( "Ireland","Spain",  "Greece", "Italy", "Portugal", "Estonia", "Slovak Republic")
merge_crisis = subset(merge1, (Country %in% crisiscountries))
merge_crisis$Country = as.character(merge_crisis$Country)
#create new id
merge_crisis$id = as.numeric(as.factor(merge_crisis$Country))
#check for balancy
rownames(merge_crisis) = seq(length=nrow(merge_crisis))
#check which years to choose for schooling
help_spain = merge_crisis[, c("Country", "TIME", "schooling")]
help_spain = reshape(help_spain, idvar = "Country", timevar = "TIME", direction = "wide")
help_spain = help_spain[, -which(colMeans(is.na(help_spain)) > 0.2)]
#help_spain = help_spain[, colSums(is.na(help_spain)) == 0]
#1. Spain GDP (Per Capita or logged): SCM
prep_spain_gdp = dataprep(
foo = merge_crisis,
predictors = c("infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
special.predictors = list(
list("socsp", seq(1995,2013, 4), "mean"),
list("schooling", c(2007,2008,2009,2010,2011,2012,2014,2015), c("mean"))
),
dependent = "gdpc",
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 7,
controls.identifier = c(1,2,3,5,6),
time.predictors.prior = c(2002:2012),
time.optimize.ssr = c(2002:2011),
unit.names.variable = "Country",
time.plot = 2002:2016
)
culating synth command
synth_spain_gdp = synth(prep_spain_gdp)
gapsplot__spain_gdp = gaps.plot(dataprep.res = prep_spain_gdp,
synth.res = synth_spain_gdp, tr.intake = 2012,
Xlab = c("Year"), Ylab = "GAP GDP per Capita in Dollar, PPP")
pathplot_spain_gdp = path.plot(dataprep.res = prep_spain_gdp, synth.res = synth_spain_gdp,
tr.intake = 2012, Xlab = c("Year"),
Ylab = "GDP per Capita Spain in Dollar, PPP")
gapsplot__spain_gdp = gaps.plot(dataprep.res = prep_spain_gdp,
synth.res = synth_spain_gdp, tr.intake = 2012,
Xlab = c("Year"), Ylab = "GAP GDP per Capita in Dollar, PPP")
#performing plots
pathplot_spain_all = path.plot(dataprep.res = prep_spain_all, synth.res = synth_spain_all,
tr.intake = 2012, Xlab = c("Year"),
Ylab = "GDP per Capita Spain in Dollar, PPP")
gapsplot_spain_all = gaps.plot(dataprep.res = prep_spain_all,
synth.res = synth_spain_all, tr.intake = 2012,
Xlab = c("Year"), Ylab = "Harmonized Unemployment Rate Spain")
#Synth: Evaluating the Spanish Labour reforms
#Calculate the unemployment for Spain Labour reforms
#needed packages
require(Synth)
require(jpeg)
#redefining merge1 Dataset
#merge_na = merge1[is.na(merge1$minwage),]
merge1$Country = as.character(merge1$Country)
#defining countries that had big labor reforms
reformcountries = c("Portugal", "Greece", "Germany", "Hungary", "Ireland", "Italy")
merge2 = subset(merge1, !(Country %in% reformcountries))
#check for balancy
#check which years to choose for schooling
help_merge1 = merge1[, c("Country", "TIME", "schooling")]
help_merge1 = reshape(help_merge1, idvar = "Country", timevar = "TIME", direction = "wide")
help_merge1 = help_merge1[, -which(colMeans(is.na(help_merge1)) > 0.3)]
#help_spain = help_spain[, colSums(is.na(help_spain)) == 0]
#check for unemp
#help_merge1 = merge1[, c("Country", "TIME", "unemp")]
#help_merge1 = reshape(help_merge1, idvar = "Country", timevar = "TIME", direction = "wide")
#help_merge1 = help_merge1[, -which(colMeans(is.na(help_merge1)) > 0.3)]
#help_merge1 = help_merge1[, colSums(is.na(help_merge1)) == 0]
#for unemp: delete Switzerland & Turkey
#merge1 = merge1[ ! ( merge1$id==23| ( merge1$id ==24 )), ]
#set new id
merge2$id = as.numeric(as.factor(merge2$Country))
#1. Spain Unemployment: SCM
prep_spain_all = dataprep(
foo = merge2,
predictors = c( "infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
dependent = "gdpc",
special.predictors = list(
list("schooling", c(2009,2010,2011,2012,2014,2015), "mean"),
list("socsp", seq(2003,2013,2), "mean")
),
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 15,
controls.identifier = c(1:14,16,17,18,19),
time.predictors.prior = c(2002:2015),
time.optimize.ssr = c(2002:2014),
time.plot = 2002:2016,
unit.names.variable = "Country"
)
#calculating synth command
synth_spain_all = synth(prep_spain_all)
#calculating tables
synth.table_spain_all = synth.tab(
dataprep.res = prep_spain_all,
synth.res = synth_spain_all)
print(synth.table_spain_all)
#performing plots
pathplot_spain_all = path.plot(dataprep.res = prep_spain_all, synth.res = synth_spain_all,
tr.intake = 2012, Xlab = c("Year"),
Ylab = "GDP per Capita Spain in Dollar, PPP")
gapsplot_spain_all = gaps.plot(dataprep.res = prep_spain_all,
synth.res = synth_spain_all, tr.intake = 2012,
Xlab = c("Year"), Ylab = "Harmonized Unemployment Rate Spain")
setwd("C:/Users/domin/Dropbox/Bachelorarbeit/Graphics/New Graphics (24.07)")
#1. table that creates the differences in explanatory variables: Synthetic vs. Real
spain_tab1_all = data.frame(synth.table_spain_all$tab.w)
spain_tab1_all[,1] = round(spain_spain_all[,1],2)
table1_spain_all = xtable(cbind(spain_tab1_all))
colnames(table1_spain_gdp) = c("Weights", "Country", "Unit Number")
pdf(file = "Spain-GDP-ALL-Countries-Weights.pdf", width = 5.5, height = 5.5, family = "Times", pointsize = 12)
grid.table(table1_spain_all, rows = NULL)
dev.off()
#2. Creating a graph: Synthetic vs Real Spain -GDP -Pathplot
pdf(file = "Spain-Synthetic-Pathplot-GDPC-ALL.pdf", width = 5.5, height = 5.5, family = "Times", pointsize = 12)
synth_spain_all_YO = (prep_spain_all$Y0plot%*%synth_spain_all$solution.w)#keine ahnung was das sein soll// was $YO ist
plot(2002:2016, prep_spain_all$Y1plot,
type = "l", ylim = c(0,45000), col = "black", lty = "solid",
ylab = "Per-Capita GDP Spain (PPP, USD)",
xlab = "year",
xaxs = "i", yaxs = "i",
lwd = 2
)
lines(2002:2016, synth_spain_all_YO, col = "black", lty = "dashed", lwd = 2)
abline(v=2012, lty = "dotted")
abline(v = 2011, lty = "dotted")
legend(x ="bottomright",
legend = c("Spain", "Synthetic Spain"),
lty = c("solid", "dashed"), col = c("black", "black"),
cex = .8, bg = "white", lwd = c(2,2))
arrows(2010,20000,2011.8,20000,col="black",length=.1)
text(2008.8,20000,"Labor Reform 2012",cex=0.8)
arrows(2009,25000,2010.8,25000,col="black",length=.1)
text(2007.8,25000,"Labor Reform 2011",cex=0.8)
dev.off()
#3. gap_spain
pdf(file = "Spain-GDPC-Synthetic-Gapsplot-ALL.pdf", width = 5.5, height = 5.5, family = "Times", pointsize = 12)
gap_spain_all = prep_spain_all$Y1plot - (prep_spain_all$Y0plot%*%synth_spain_all$solution.w)
plot(2002:2016, gap_spain_all,
type = "l",
yaxt = "n",
ylim = c(-6000, 6000),
col = "black", lty = "solid",
ylab = c("Gap in per-capita GDP (PPP, USD)"),
xlab = "Year",
xaxs = "i",
yaxs = "i",
lwd = 2
)
ylabel = seq(-6000, 6000, by = 2000)
axis(1)
axis(2, at = ylabel, las = 1)
abline(v = 2012, lty = "dotted")
abline(v = 2012, lty = "dotted")
abline(h = 0, lty = "dotted")
arrows(2010,20000,2011.8,20000,col="black",length=.1)
text(2008.8,20000,"Labor Reform 2012",cex=0.8)
arrows(2009,25000,2010.8,25000,col="black",length=.1)
text(2007.8,25000,"Labor Reform 2011",cex=0.8)
dev.off()
#4. Table of the Different averaged variables
pred_table_spain_all = xtable(round(synth.table_spain_all$tab.pred , 1),digits=1)
pdf(file = "Spain-GDP-Dependent-Variables-Fit.pdf", width = 5.5, height = 5.5, family = "Times", pointsize = 12)
grid.table(pred_table_spain_all)
dev.off()
#1. table that creates the differences in explanatory variables: Synthetic vs. Real
spain_tab1_all = data.frame(synth.table_spain_all$tab.w)
spain_tab1_all[,1] = round(spain_tab1_all[,1],2)
table1_spain_all = xtable(cbind(spain_tab1_all))
colnames(table1_spain_gdp) = c("Weights", "Country", "Unit Number")
pdf(file = "Spain-GDP-ALL-Countries-Weights.pdf", width = 5.5, height = 5.5, family = "Times", pointsize = 12)
grid.table(table1_spain_all, rows = NULL)
dev.off()
spain_tab1_all = data.frame(synth.table_spain_all$tab.w)
spain_tab1_all = data.frame(synth.table_spain_all$tab.w)
spain_tab1_all = data.frame(synth.table_spain_all$tab.w)
spain_tab1_all = data.frame(synth.table_spain_all$tab.w)
table1_spain_all = xtable(cbind(spain_tab1_all))
colnames(table1_spain_gdp) = c("Weights", "Country", "Unit Number")
colnames(table1_spain_all) = c("Weights", "Country", "Unit Number")
pdf(file = "Spain-GDP-ALL-Countries-Weights.pdf", width = 5.5, height = 5.5, family = "Times", pointsize = 12)
grid.table(table1_spain_all, rows = NULL)
dev.off()
# reading in the oecd data
#1. balsic pre-requirements
require(xlsx)
require(reshape2)
require(tidyr)
require(dplyr)
rm(list = ls())
setwd("C:/Users/domin/Dropbox/Bachelorarbeit/Data/New Data (14.06)")
#writing a function for oecd data read ins
readoecd = function(x,y){
a = read.csv(y, header = T, sep = ",")
columnanmes = c("Country", "TIME", "Value")
a = a [, columnanmes]
}
#example
gdpc = readoecd("gdpc", "gdp_capita_2006.csv")
#1 reading in unemp
unemp = readoecd("unemp", "unemp_2006.csv")
colnames(unemp)[3] = "unemp"
#2 reading in gdpc
gdpc = readoecd("gdpc", "gdp_capita_2006.csv")
colnames(gdpc)[3] = "gdpc"
#3 reading in gdp per hour
gdph = readoecd("gdppr", "gdp_productivity_2006.csv")
colnames(gdph)[3] = "gdph"
#4 reading in account_bip
bipacc = readoecd("bipacc", "account_bip_1806.csv")
colnames(bipacc)[3] = "bipacc"
#5 reading in Export quota/not sure about data
#6 reading in gini
gini = readoecd("gini", "gini_workingpop_2006.csv")
colnames(gini)[3] = "gini"
#7 reading in R&D benchmark STILL DO DO!
#rd = readoecd("rd", "net_rd_1806.csv")
#8 reading in social Spending
socsp = read.csv("socialspending_2106.csv")
socsp = socsp[, c("Country", "Year", "Value")]
colnames(socsp) = c("Country", "TIME", "socsp")
#9 reading in inflation
infl = readoecd("infl", "inflation_1806.csv")
colnames(infl)[3] = "infl"
#reading in minwage
minwage = readoecd("minwage", "minwage_2706.csv")
colnames(minwage)[3] = "minwage"
#10. Reading in exports to GDP ratio
#expq = readoecd("expq", "Exports_GDP_1406.csv")
#11 Reading in Change of GDP
loggdp = readoecd("loggdp", "gdp_change_2906.csv")
colnames(loggdp)[3] = "loggdp"
#12 Reading in youth_unemp
youth_unemp = readoecd("youth_unemp", "youth_unemp_0107.csv")
colnames(youth_unemp)[3] = "youth_unemp"
#13 Reading in employment protection
emp_protect = readoecd("emp_protect", "emp_protect_1207.csv")
colnames(emp_protect)[3] = "emp_protect"
#14 Reading in school levels (Percentage at least upper secondary)
schooling = read.csv("schooling_secondary_1607.csv")
schooling = schooling[, -c(1:2, 4)]
schooling = schooling[-c(29:33),]
schooling$id = as.numeric(as.factor(schooling$Country.Name))
colnames(schooling) = c("Country", 1990 : 2016, "id")
#checking if colum header are factor
schooling$Country = factor(schooling$Country)
#changing from wide to long format
schooling = reshape(schooling, direction="long", varying=list(names(schooling)[2:28]), v.names="schooling",
idvar=c("id","Country"), timevar="TIME", times=1990:2016)
schooling = schooling[ order(schooling$Country), ]
rownames(schooling) = c()
schooling = schooling[, c(1, 3, 4)]
schooling[schooling == ".."] = NA
#15 reading in Labour Force Participation
particip = readoecd("particip", "participation_1907.csv" )
colnames(particip)[3] = "particip"
#16 reading in Exports
library(tidyr)
exports = read.csv("Exports_GDP_1907.csv")
exports = exports[, -c(1:2, 4)]
exports = exports[-c(28:32),]
colnames(exports) = c("Country", 1992 : 2016)
#checking if colum header are factor
exports$Country = factor(exports$Country)
#changing from wide to long format
keycol = "TIME"
valuecol = "exports"
gathercols = c(1992:2016)
exports = gather_(exports, keycol, valuecol, gathercols)
#dropping some variables is not crucial
exports = exports[ order(exports$Country), ]
rownames(exports) = c()
exports[exports == ".."] = NA
#10merging the data sets
#. merge all different data sets
merge1 = merge(unemp, gini,  by=c("Country","TIME"),all  = T)
merge1 = merge(merge1, gdpc, by=c("Country","TIME"),all  = T)
merge1 = merge(merge1, gdph, by=c("Country","TIME"),all  = T)
merge1 = merge(merge1, infl, by=c("Country","TIME"),all  = T)
merge1 = merge(merge1, socsp, by=c("Country","TIME"),all  = T)
merge1 = merge(merge1, minwage, by= c("Country", "TIME"), all = T)
merge1 = merge(merge1, bipacc, by = c("Country", "TIME"), all = T)
merge1 = merge(merge1, loggdp, by = c("Country", "TIME"), all = T)
merge1 = merge(merge1, youth_unemp, by = c("Country", "TIME"), all = T)
merge1 = merge(merge1, schooling, by = c("Country", "TIME"), all = T)
merge1 = merge(merge1, emp_protect, by = c("Country", "TIME"), all = T)
merge1 = merge(merge1, particip, by = c("Country", "TIME"), all = T)
merge1 = merge(merge1, exports, by = c("Country", "TIME"), all = T)
#subsetting the data without unwanted countries
subsetv = c("Iceland","European Union (27 countries)", "Croatia", "Cyprus", "United Arab Emirates",  "Japan","Lithuania","New Zealand", "OECD - Total", "Latvia")
merge1 = subset(merge1, !(Country %in% subsetv))
#check class of data frame
sapply(merge1, class)
# changing all except country to numeric
cols.num = c("TIME", "bipacc", "youth_unemp", "unemp", "gdpc","gdph", "gini", "infl", "socsp", "schooling", "emp_protect", "exports", "particip")
merge1[cols.num] = sapply(merge1[cols.num],as.numeric)
sapply(merge1, class)
#test if numeric
mean(merge1$unemp, na.rm = T)
#adding unique ID to countries
merge1$id = as.numeric(as.factor(merge1$Country))
# putting the data in the right order
merge1 = merge1[, c(1,2,17,3,12,4,5,6,7,8,9,10,11,13,14, 15, 16)]
#11 save merged data
write.csv(merge1, "MergedData.csv", ,row.names=FALSE)
#
merge1$Country = as.character(merge1$Country)
reformcountries = c("Portugal", "Greece", "Germany", "Hungary", "Ireland", "Italy")
merge2 = subset(merge1, !(Country %in% reformcountries))
help_merge1 = merge1[, c("Country", "TIME", "schooling")]
help_merge1 = reshape(help_merge1, idvar = "Country", timevar = "TIME", direction = "wide")
help_merge1 = help_merge1[, -which(colMeans(is.na(help_merge1)) > 0.3)]
merge2$id = as.numeric(as.factor(merge2$Country))
prep_spain_all = dataprep(
foo = merge2,
predictors = c( "infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
dependent = "gdpc",
special.predictors = list(
list("schooling", c(2009,2010,2011,2012,2014,2015), "mean"),
list("socsp", seq(2003,2013,2), "mean")
),
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 15,
controls.identifier = c(1:14,16,17,18,19),
time.predictors.prior = c(2002:2015),
time.optimize.ssr = c(2002:2014),
time.plot = 2002:2016,
unit.names.variable = "Country"
)
synth_spain_all = synth(prep_spain_all)
require(plm)
print(synth.table_spain_gdp)
#Synth: Evaluating the Spanish Labour reforms
#Calculate the unemployment for Spain Labour reforms
#needed packages
require(Synth)
require(jpeg)
#defining new "CRISIS" dataset
#merge_na = merge1[is.na(merge1$minwage),]
crisiscountries = c( "Ireland","Spain",  "Greece", "Italy", "Portugal", "Estonia", "Slovak Republic")
merge_crisis = subset(merge1, (Country %in% crisiscountries))
merge_crisis$Country = as.character(merge_crisis$Country)
#create new id
merge_crisis$id = as.numeric(as.factor(merge_crisis$Country))
#check for balancy
rownames(merge_crisis) = seq(length=nrow(merge_crisis))
#check which years to choose for schooling
help_spain = merge_crisis[, c("Country", "TIME", "schooling")]
help_spain = reshape(help_spain, idvar = "Country", timevar = "TIME", direction = "wide")
help_spain = help_spain[, -which(colMeans(is.na(help_spain)) > 0.2)]
#help_spain = help_spain[, colSums(is.na(help_spain)) == 0]
#1. Spain Unemployment: SCM
prep_spain_u = dataprep(
foo = merge_crisis,
predictors = c( "infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
dependent = "unemp",
special.predictors = list(
list("schooling", c(2007,2008,2009,2010,2011,2012,2014,2015), "mean"),
list("socsp", seq(1995,2013,2), "mean")
),
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 7,
controls.identifier = c(1,2,3,5,6),
time.predictors.prior = c(2002:2012),
time.optimize.ssr = c(2000:2011),
unit.names.variable = "Country",
time.plot = 2000:2016
)
#calculating synth command
synth_spain_u = synth(prep_spain_u)
#calculating tables
synth.table_spain_u = synth.tab(
dataprep.res = prep_spain_u,
synth.res = synth_spain_u)
print(synth.table_spain_u)
#performing plots
gapsplot_spain_u = gaps.plot(dataprep.res = prep_spain_u,
synth.res = synth_spain_u, tr.intake = 2012,
Xlab = c("Year"), Ylab = "Harmonized Unemployment Rate Spain")
#1. Spain GDP (Per Capita or logged): SCM
prep_spain_gdp = dataprep(
foo = merge_crisis,
predictors = c("infl", "loggdp", "emp_protect", "exports", "particip"),
predictors.op = "mean",
special.predictors = list(
list("socsp", seq(1995,2013, 4), "mean"),
list("schooling", c(2007,2008,2009,2010,2011,2012,2014,2015), c("mean"))
),
dependent = "gdpc",
unit.variable = "id",
time.variable = "TIME",
treatment.identifier = 7,
controls.identifier = c(1,2,3,5,6),
time.predictors.prior = c(2002:2012),
time.optimize.ssr = c(2002:2011),
unit.names.variable = "Country",
time.plot = 2002:2016
)
#calculating synth command
synth_spain_gdp = synth(prep_spain_gdp)
#calculating tables
synth.table_spain_gdp = synth.tab(
dataprep.res = prep_spain_gdp,
synth.res = synth_spain_gdp)
print(synth.table_spain_gdp)
#performing plots
pathplot_spain_gdp = path.plot(dataprep.res = prep_spain_gdp, synth.res = synth_spain_gdp,
tr.intake = 2012, Xlab = c("Year"),
Ylab = "GDP per Capita Spain in Dollar, PPP")
gapsplot__spain_gdp = gaps.plot(dataprep.res = prep_spain_gdp,
synth.res = synth_spain_gdp, tr.intake = 2012,
Xlab = c("Year"), Ylab = "GAP GDP per Capita in Dollar, PPP")
gapsplot_spain_u = gaps.plot(dataprep.res = prep_spain_u,
synth.res = synth_spain_u, tr.intake = 2012,
Xlab = c("Year"), Ylab = "Harmonized Unemployment Rate Spain")
